

var floweyRemembers = false
var hp = 20
var maxHp = 20
var gp = 0
var charaName = "CHARA"
var atk = 1
var xp = 0
var lv = 1
var weapon = nothing

stats {
    hp gp maxHp atk xp lv weapon
}

inventory {
    stick
}

@[
    fun displayStats() {
        displayText("$charaName hp=$hp/$maxHp gp=$gp")
    }
]@

event youDie {
    "You're in pain. Everything goes dark. You die."
    "..."
    "Or do you?"
    load
}

event healthCheck {
    branch {
        conditions { hp <= 0 }
        trigger youDie
    }
}

event levelUpCheck {
    branch {
        conditions {
            (xp / 10) + 1 > lv
        }
        lv = (xp / 10) + 1
        "Your LOVE increased =)"
    }
}

item monsterCandy {
    description "Monster candy: Heals 5 hp"
    use {
        "You ate the monster candy"
        hp = max(maxHp, hp + 5)
        consume
        branch {
            conditions {
                hp == maxHp
            }
            "Your HP was maxed out"
        }
        "You healed 5 HP"
    }
    //implicit equip and unequip
}

item stick {
    description "Stick: Good and sturdy"
    use {
        "You equipped the stick."
        equip
    }
    equip {
        atk = atk + 2
        //todo do this better
        @[ weapon.unequip() ]@ //do the unequip action
        get_item weapon        //place the weapon in the inventory
        weapon = stick         //use this one as a weapon
        consume                //remove this one from inventory
    }
    unequip {
        atk = atk - 2
    }
}

item nothing {
    description "Nothing but your bare hands. Use this to replace your weapon."
    use {
        "You put away your weapon"
        equip
    }
    equip {
        atk = atk + 2
        //todo do this better
        @[ weapon.unequip() ]@ //do the unequip action
        get_item weapon        //place the weapon in the inventory
        weapon = nothing       //use this one as a weapon
        consume                //remove this one from inventory
    }
}

event itemsSubmenu {
    var fightMode = true
    branch {
        conditions { fightMode }
        @[
			val itemMap = (0..<inventory.size).associateWith { inventory[it] }
			println("Choose an action and an item, such as: info 15")
			println("Available actions: use, info, drop, exit")
			println("Your items:")
			itemMap.forEach {
				println("${it.key} ${it.value::class.simpleName}")
			}
			while (true) {
				print("Your choice : ")
				try {
					val choice = readln().split(' ')
					when (choice[0]) {
						"exit" -> return
						"use" -> itemMap[choice[1].toInt()]!!.use()
						"info" -> println(itemMap[choice[1].toInt()]!!.description)
						"drop" -> {
						    val item = itemMap[choice[1].toInt()]!!
						    inventory.remove(item)
						    println("You dropped the ${item::class.simpleName}")
						}
					}
				} catch (_: Exception) {
					println("No such choice exists")
				}
			}
        ]@

    }
}

introduction {
    "You climbed a mountain that is famous for making people disappear. In hindsight, that might have been a bad idea."
    "You stumbled and fell into a hole. It was quite a fall..."
    "You wake up between flowers and moss. Somehow you're alright."
    branch {
        conditions {
            @[ lastSave.location != introduction ]@
        }
        "Hey, there's a save. What do you do?"
        choices {
            "Continue" load
            "Reset" save
        }
    }
    "This DEFINITELY isn't an UNDERTALE ripoff." ->
    @[ print("Please name you chara: ") ; charaName = readln() ]@
    choices {
        "Begin" goto ruinsEntrance
    }
}

location ruinsEntrance {
    "You woke up in this room. You can faintly see the sunlight filtering through from above." ->
    "It's impossible to climb back out. There's an exit to the east, leading deeper into the mountain." ->
    // The parent block cannot have anything after the choices block. The choices block keeps executing until it terminates itself.
    choices {
        "Explore the room" {
            "There's nothing to see except the flower bed. It's made of golden flowers. Looks deliberately planted."
            // This didn't terminate the block, so the choices are presented again.
        }
        "Progress" {
            "You step into the next room"
            goto ruinsEntranceFlowey
        }
    }
}

location ruinsEntranceFlowey {
    "There's one door leading eastward, and one leading westward."
    // Events can happen in locations. This in an inline (unnamed) event.
    story event {
        "There's a flower up ahead. It seems to have a... face?" ->
        "You can't cross a room without approaching it. What do you do?"
        // Events can present choices.
        choices {
            "Go back" {
                untrigger
                goto ruinsEntrance
            }
            // After an event terminates, execution continues normally.
            "Approach" {
                trigger floweyIntro
                finish  // Terminate innermost event. (would get stuck otherwise)
            }
        } // If you get to this line, the choice will execute again.
    }
    choices {
        "Go east" goto ruinsEntranceStairs
        "Go west" goto ruinsEntrance
    }
}

// You can define named events. They can be placed in locations or triggered manually.
event floweyIntro {
    "The flower starts talking ?!" ->
    "It intruduces itself as 'Flowey the flower'"
    branch {
        // The conditions block (if exists) is always the first block.
        conditions {
            !floweyRemembers
        }
        floweyRemembers = true
        "He offers you a tutorial (you can't refuse)"
        trigger floweyFirstFight
        finish  // Terminate innermost event.
    }
    "He scolds you for making him introduce himself. Weird. Have you two met before?" ->
    "He gives you the tutorial anyway."
    // Events can trigger other events ad-infinitum.
    trigger floweyFirstFight
}

location ruinsEntranceStairs {
    "There are stairs on the east side, leading up to a door. There's also a door on the west side."
    "There's a you-sized orb in the middle of the room. It shines with golden light, and radiates a pleasant warmth."
    story event {
        "You catch a glimpse of Toriel as she leaves the room. You can't catch up"
    }
    choices {
        "Go west" goto ruinsEntranceFlowey
        "Touch the orb" {
            "You touch the orb. The warmth spreads through you. (all injuries healed)"
            "You're filled with Determination. (savepoint reached)"
            hp = maxHp
            @[ displayStats() ]@
            save
        }
        "Go east" {
            "Your adventure finally begins." ->
            goto fightTestRoom
            //"What a shame I didn't implement it." ->
            //"So, ...uuuh... YOU WIN!"
            //end //Terminate the story
        }
    }
}

location fightTestRoom {
    "This is the fight test room. You will fight here."
    trigger doggoFight
    story event {
        conditions {
            after(doggoFight)
        }
        trigger froggitFight
    }
    "You're done."
    end
}

event floweyFirstFight {
    "Flowey: Your soul starts out weak, but you can become stronger by gaining LV."
    "Flowey: What does LV stand for? Why, LOVE of course!"
    "Flowey: You want some LOVE, don't you? Don't worry, I'll share some with you!"
    "Fist-sized translucent white orbs materialize in the air around flowey. He winks at you cutely."
    "Flowey: Down here LOVE is shared through little white... 'friendliness pellets'. Just touch them to absorb." ->
    "The 'friendliness pellets' are getting closer to you. They move slowly. You could dodge them with ease."
    choices {
        "Dodge!" {
            "You dodge them with ease. (they disappear after a distance behind you). Flowey looks confused." ->
            "Flowey: Hey, buddy. You missed them."
            "Flowey: Let's try again." ->
            "The 'friendliness pellets' come again, but with greater speed."
            // Choices can be presented while handling choices.
            choices {
                "Dodge!" {
                    "Flowey's face turns into a scowl. He is decidedly unhappy."
                    "Flowey: Is this a joke ?! Are you brain-dead? RUN. INTO. THE." ->
                    "Flowey: BULLETS!! (oopsie-face)" <- // The <- makes this a vanishing line.
                    "Friendliness pellets! (innocent smile)" ->
                    "They come at you again."
                    choices {
                        "Dodge!" {
                            "Floweys voice deepens. He grins maliciously."
                            "Flowey: You know what's really going on here, don't you? You just wanted to see me suffer."
                            trigger torielSavesYouFromFlowey
                            finish // Jump out of choices by terminating the event.
                        }
                        "Do not" {
                            trigger floweyTrickedYou
                            finish // Jump out of choices by terminating the event.
                        }
                    } // If you get to this line, the choice will execute again.
                }
                "Do not." {
                    trigger floweyTrickedYou
                    finish // Jump out of choices by terminating the event.
                }
            } // If you get to this line, the choice will execute again.
        }
        "Do not." {
            trigger floweyTrickedYou
            finish // Jump out of choices by terminating the event.
        }
    } // If you get to this line, the choice will execute again.
}

event torielSavesYouFromFlowey {
    "Flowey: DIE!!" ->
    "The bullets encircle you. There's nowhere to run. Flowey laughs maniacally as they slowly close in..."
    "..."
    "Suddenly, the bullets disappear! Flowey looks confused. Before he can even react, a fireball hits him!"
    "Flowey's hurt. He runs away!"
    "Youe're saved by a... goat person?"
    "She calls herself Toriel, and this place is mostly hers. Lore dump time...."
    "This place is called the underground, home of monsters. Currently, you're the only human here." ->
    "You're in the Ruins area, which Toriel oversees."
    "She gives you direction to her house, then leaves to 'prepare a surprise'. You only have good feelings about this."
}

event floweyTrickedYou {
    "You touch the orbs. They hurt! You've sustained damage."
    "Flowey: You IDIOT. In this world, it's KILL OR BE KILLED!"
    "Flowey: Why would ANYONE pass up an opportunity like this?"
    "Flowey: DIE!!" ->
    "The bullets encircle you. There's nowhere to run. Flowey laughs maniacally as they slowly close in..."
    trigger youDie
}

story event doggoFight {
    var stayStill = 3
    var doggoHP = 30
    var stayedStill = false
    choices {
        //FIGHT
        "Fight Doggo" {
            doggoHP = doggoHP - atk
            branch {
                conditions {
                    doggoHP <= 0
                }
                "Doggo turns into dust."
                "You won. Gained 30 XP and 20 Gold"
                gp = gp + 20
                xp = xp + 30
                trigger levelUpCheck
                finish
            }
        }
        "Try to run" {
            stayedStill = false
        }
        "Stay still" {
            stayedStill = true
        }

        //ACT
        "Check" {
            "Doggo. Only sees moving things"
        }
        "Play" {
            branch {
                conditions { has_item(stick) }
                "You throw the sick. Doggo fetches it. He seems happy."
                stayStill = 0
            }
            branch {
                conditions { !has_item(stick) }
                "You want play with Doggo, but can't. If only you had a stick..."
           }
        }
        "Pet" {
            //only works if he spared you
        }

        //ITEM
        "Item" {
            trigger itemsSubmenu //will be different in overworld and fight
        }

        //MERCY
        "Spare" {
            branch {
                conditions {
                    stayStill <= 0
                }
                "You won. Gained 0 XP and 10 Gold"
                finish
            }
        }

        //monster's turn
        "beforeEachTurn" {
            //display stats
            //maybe some ASCII art
        }
        "afterEachTurn" { //will only execute if choice returned normally
            branch {
                conditions { stayedStill }
                stayStill = stayStill - 1
                "You stayed still. Doggo couldn't find you."
            }
            branch {
                conditions { !stayedStill }
                hp = hp - 5
                "Received 5 damage"
                trigger healthCheck
            }
        }
    }
}


event froggitFight {

}
